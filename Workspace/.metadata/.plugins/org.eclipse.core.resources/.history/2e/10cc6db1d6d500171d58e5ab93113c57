package OwenC.AutomatedTestingWeek;

import static org.junit.Assert.*;

import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.NoSuchElementException;

import org.junit.*;

import org.openqa.selenium.chrome.*;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.FluentWait;
import org.openqa.selenium.support.ui.Wait;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.Status;
import com.aventstack.extentreports.reporter.ExtentHtmlReporter;

import org.openqa.selenium.WebDriver;

public class TestingStorePage {

	private List<String> inputList;
	private WebDriver webDriver;
	private SpreadSheetReader spreadSheetReader;
	private static ExtentReports report;
	private ScreenShot screenShot;
	//private Wait<WebDriver> wait;
	private StoreHomePage storeHome;

	@BeforeClass
	public static void init() {
		report = new ExtentReports();
		String fileName = "StoreTestResults" + ".html";
		String filePath = System.getProperty("user.dir") + File.separatorChar + fileName;
		report.attachReporter(new ExtentHtmlReporter(filePath));
	}
	
	@Before
	public void setUp() {
		spreadSheetReader = new SpreadSheetReader("properties.xlsx");
		webDriver = driverSelector();
		inputList = new ArrayList<String>();
		
		storeHome = PageFactory.initElements(webDriver, StoreHomePage.class);
		
		/*wait = new FluentWait<WebDriver>(webDriver)
		.withTimeOut(30, SECONDS)
		.pollingEvery(5, SECONDS)
		.ignoring(NoSuchElementException.class);*/
		

	}

	@After
	public void tearDown() {

		webDriver.quit();
	}

	public WebDriver driverSelector() {
		WebDriver toReturn;
		inputList = new ArrayList<String>();
		inputList = spreadSheetReader.readRow(7, "inputs");

		if (inputList.get(1).equalsIgnoreCase("firefox")) {
			System.setProperty("webdriver.gecko.driver", "geckodriver.exe");
			toReturn = new FirefoxDriver();
		} else {
			toReturn = new ChromeDriver();
		}

		return toReturn;
	}
	
	@AfterClass
	public static void cleanUp()
	{
		report.flush();
	}

	@Test
	public void storeSiteTestOne() {
		ExtentTest test = report.createTest("Store Site Test One");
		test.log(Status.INFO, "Store Site Test One: Removing item from cart");
		
		Actions builder = new Actions(webDriver);
		
		inputList = spreadSheetReader.readRow(8, "inputs");
		String homePageURL = inputList.get(1);
		test.log(Status.DEBUG, "URL from spreadsheet : " + homePageURL);
		
		webDriver.navigate().to(homePageURL);
		test.log(Status.INFO, "Navigated to: " + homePageURL);
		webDriver.manage().window().maximize();
		
		storeHome.getCartButton().click();
		
		String cartContents = storeHome.getCartContents().getText().toString();
		test.log(Status.DEBUG, "Cart contents text: " + cartContents);
		
		assertEquals("Cart wasn't displaying expected", "Your shopping cart is empty.", cartContents);
		
		storeHome.getPageLogo().click();
		
		storeHome.getFeaturedItemOne().click();
		test.log(Status.DEBUG, "Clicked on: featuredItemOne");
		
		try {
			webDriver.wait(30000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		String size = storeHome.getSizeDropDown().getText();
		test.log(Status.DEBUG, "Size Dropdown says: " + size);
		
		builder.click(storeHome.getSizeDropDown()).release().moveByOffset(5, 20).click().release().perform();
		
		size = storeHome.getSizeDropDown().getText();
		test.log(Status.DEBUG, "Size Dropdown says: " + size);
	}

}
